ls()
chest<-33:48
freq<-c(3,18,81,185,420,749,1073,1079,934,658,370,92,50,21,4,1)
quetelet.chest<-data.frame(chest,freq)
quetelet.chest.long.2<-rep(quetelet.chest$chest, quetelet.chest$freq)
head(quetelet.chest.long.2, n=10)
str(quetelet.chets.long.2)
str(quetelet.chest.long.2)
savehistory("quetelet.Rhistory")
setwd("~/Dropbox/Works/Class/Statistics/201501")
class.roll.1501<-read.table("class_roll1501.txt", header=F, sep="")
ls()
rm(list=ls())
class.roll.1501<-read.table("class_roll1501.txt", header=F, sep="")
str(class.roll.1501)
dimnames(class.roll.1501)[[2]]<-c("ID", "Name", "Major", "Year")
red.id<-sample(1:58, size=29)
red.id
class.roll.1501$group<-factor(ifelse((1:58) %in% red.id, "red", "black"), levels=c("red", "black"))
black.id<-(1:58)[-red.id]
ID.13<-factor(ifelse(substr(class.roll$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13)
table(ID.13[red.id])
table(ID.13[black.id])
red.id<-sample(1:58, size=29)
black.id<-(1:58)[-red.id]
class.roll.1501$group<-factor(ifelse((1:58) %in% red.id, "red", "black"), levels=c("red", "black"))
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[black.id])
table(ID.13[red.id])
red.id<-sample(1:58, size=29)
black.id<-(1:58)[-red.id]
class.roll.1501$group<-factor(ifelse((1:58) %in% red.id, "red", "black"), levels=c("red", "black"))
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
table(ID.13)
red.id<-sample(1:58, size=29)
black.id<-(1:58)[-red.id]
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13)
table(ID.13[red.id])
table(ID.13[black.id])
red.id<-sample(1:58, size=29)
red.id
black.id<-(1:58)[-red.id]
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
red.id<-sample(1:58, size=29)
black.id<-(1:58)[-red.id]
red.id
black.id
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
red.id<-sample(1:58, size=29)
black.id<-(1:58)[-red.id]
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
red.id<-sample(1:58, size=29)
black.id<-(1:58)[-red.id]
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
black.id<-(1:58)[-red.id]
red.id<-sample(1:58, size=29)
black.id<-(1:58)[-red.id]
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
red.id<-sort(sample(1:58)[1:29])
black.id<-(1:58)[-red.id]
red.id
black.id
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
black.id<-(1:58)[-red.id]
table(ID.13[black.id])
ID.12<-factor(ifelse(substr(class.roll$ID, 1, 4) >= 2012, "younger.12", "older.12"), levels=c("younger.12", "older.12"))
ID.12<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2012, "younger.12", "older.12"), levels=c("younger.12", "older.12"))
table(ID.13[black.id])
table(ID.12[red.id])
table(ID.12[black.id])
red.id<-sort(sample(1:58)[1:29])
black.id<-(1:58)[-red.id]
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
ID.12<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2012, "younger.12", "older.12"), levels=c("younger.12", "older.12"))
table(ID.12[red.id])
table(ID.12[black.id])
red.id
black.id
red.id<-sort(sample(1:58)[1:29])
black.id<-(1:58)[-red.id]
sort(c(red.id, black.id))
ID.13<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2013, "younger.13", "older.13"), levels=c("younger.13", "older.13"))
table(ID.13[red.id])
table(ID.13[black.id])
ID.12<-factor(ifelse(substr(class.roll.1501$ID, 1, 4) >= 2012, "younger.12", "older.12"), levels=c("younger.12", "older.12"))
table(ID.12[red.id])
table(ID.12[black.id])
ls()
class.roll.1501[red.id, "ID"]
class.roll.1501[black.id, "ID"]
cbind(class.roll.1501[red.id, "ID"], class.roll.1501[black.id, "ID"], col.names=c("red", "black"))
cbind(class.roll.1501[red.id, "ID"], class.roll.1501[black.id, "ID"])
red.black.ID<-cbind(class.roll.1501[red.id, "ID"], class.roll.1501[black.id, "ID"])
names(red.black.ID)<-c("red", "black")
red.black.ID
red.black.ID<-cbind(class.roll.1501[red.id, "ID"], class.roll.1501[black.id, "ID"])
dimnames(red.black.ID)[[2]]<-c("red", "black")
red.black.ID
ls()
getwd()
save(file="red_black1501.rda", list=ls())
savehistory(file="red_black1501.Rhistory")
setwd("~/Dropbox/Works/Class/Statistics/R.WD/class2014")
rm(list=ls())
read.table("lab_presence.txt", header=F, sep="")
lab.presence<-read.table("lab_presence.txt", header=F, sep="")
dimnames(lab.presence)[[2]]<-c("ID", "name")
load("red_black_2014.rda")
ls()
class.roll$ID %in% lab.presence$ID
class.roll$ID[class.roll$ID %in% lab.presence$ID]
class.roll$ID[!(class.roll$ID %in% lab.presence$ID)]
class.roll$name[!(class.roll$ID %in% lab.presence$ID)]
class.roll.group[!(class.roll$ID %in% lab.presence$ID)]
table(class.roll.group[!(class.roll$ID %in% lab.presence$ID)])
which(class.roll$ID %in% lab.presence$ID)
which(!(class.roll$ID %in% lab.presence$ID))
class.roll$name[which(!(class.roll$ID %in% lab.presence$ID))]
class.roll
presence<-ifelse(class.roll$ID %in% lab.presence$ID, "present", "absent")
presence
presence<-factor(ifelse(class.roll$ID %in% lab.presence$ID, "present", "absent"), levels=c("present", "abesent"))
class.roll.2<-data.frame(class.roll, presence=presence)
class.roll.2
presence
presence<-factor(ifelse(class.roll$ID %in% lab.presence$ID, "present", "absent"), levels=c("present", "absent"))
presence
class.roll.2<-data.frame(class.roll, presence=presence)
class.roll.2
attach(class.roll.2)
detach()
table(class.roll.2$group, class.roll.2$presence)
substr(class.roll$name, 1, 6)
substr(class.roll$name, 1, 2) ==  "김"
substr(class.roll$name, 1, 2)
substr(class.roll$name, 1, 1)
substr(class.roll$name, 1, 1) == "김"
(substr(class.roll$name, 1, 1) == "김")[red.id]
list(red=class.roll$name[sort(red.id)], black=class.roll$name[sort(black.id)])
kim.id<-substr(class.roll$name, 1, 1)=="김"
kim.id
kim.id[red.id]
kim.id[black.id]
kim<-factor(ifelse(kim.id, "kim", "else"), levels=c("kim", "else"))
table(class.roll$group, kim)
table(class.roll$group, kim, dnn=NULL)
lee.id<-substr(class.roll$name, 1, 1)=="이"
lee<-factor(ifelse(lee.id, "lee", "else"), levels=c("lee", "else"))
table(class.roll$group, lee, dnn=NULL)
table(class.roll$group, kim, lee, dnn=NULL)
ftable(table(class.roll$group, kim, lee, dnn=NULL))
class.roll$name[lee.id]
class.roll$name[lee.id][red.id]
class.roll$name[red.id & lee.id]
red.id
lee.id
data.frame(class.roll, lee)
plot(ecdf(class.roll$n.accesses[red.id]), col="red",main="표본누적분포함수")
savehistory(file="red_black1501.Rhistory")
lines(ecdf(class.roll$n.accesses[black.id]), pch=15)
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
tapply(class.roll$n.accesses,class.roll$group,summary)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
red.id<-sample(1:71, size=35)
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
ls()
load("red_black.rda")
red.id
tapply(class.roll$n.accesses,class.roll$group,summary)
class.roll.1105
red.id.1105<-which(class.roll.1105$group == "red")
black.id.1105<-which(class.roll.1105$group == "black")
lee.tf<-substr(class.roll$name, 1, 1) == "이"
table(lee.tf, class.roll.1105$group)
table(class.roll.1105$group, lee.tf)
red.id<-red.id.1105
black.id<-black.id.1105
class.roll$group<-factor(ifelse((1:71) %in% red.id, "red", "black"), levels=c("red", "black"))
tapply(class.roll$n.accesses,class.roll$group,summary)
plot(ecdf(class.roll$n.accesses[red.id]), col="red",main="표본누적분포함수")
lines(ecdf(class.roll$n.accesses[black.id]), pch=15)
kim.id<-substr(class.roll$name, 1, 1)=="김"
kim.id
kim.id<-which(substr(class.roll$name, 1, 1)=="김")
kim.id
kim<-substr(class.roll$name, 1, 1)=="김"
kim.fac<-factor(ifelse(kim, "kim", "else"), levels=c("kim", "else"))
lee<-substr(class.roll$name, 1, 1)=="이"
lee.fac<-factor(ifelse(lee.id, "lee", "else"), levels=c("lee", "else"))
table(class.roll$group, kim.fac)
table(class.roll$group, kim.fac, dnn=NULL)
table(class.roll$group, lee.fac)
table(class.roll$group, lee.fac, dnn=NULL)
getwd()
save(file="random_id.rda", c("red.id", "black.id"))
ls()
save(file="random_id.rda", list=c("red.id", "black.id"))
?load
?ks.test
ks.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id]))
ks.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id])
t.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id])
t.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id], var.equal=T)
t.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id], var.equal=T)
t.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id], var.equal=T)$statistic
t.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id], var.equal=T)$variance
wilcox.test(class.roll$n.accesses[red.id], class.roll$n.accesses[black.id], var.equal=T)
?unique
duplicated(class.roll$n.accesses)
class.roll$n.accesses[duplicated(class.roll$n.accesses)]
unique(class.roll$n.accesses[duplicated(class.roll$n.accesses)])
x<-vector()
x
x<-vector(numeric, 10)
?vector
x<-vector(mode="numeric", length=10)
x
attributes(class.roll)
names(class.roll)
dimnames(class.roll)
dim(class.roll)
ls()
rm(x)
ls()
result
search()
library(markdown)
library(knitr)
?rpubsUpload
rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
help(package=markdown)
markdown::render("Randomization.Rmd")
?render
library(rmarkdown)
render("Randomization.Rmd")
rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
result.2<-rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
result.2<-rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
result.2<-rpubsUpload(title="Red and Black Randomization Experiment", htmlFile="Randomization.html", id=result$id)
result.2
getwd()
ls()
save(file="red_black150408.rda", list=ls())
savehistory("red_black150408.Rhistory")
red.black
str(red.black)
red.black$Color<-factor(red.black$Color, levels=c("Curitiba", "Veja"))
str(red.black)
red.black$Q6_1<-factor(red.black$Q6_1, levels=c("Male", "Female"))
red.black$Q6_2<-factor(red.black$Q6_1, levels=c("Glasses", "No.Glasses"))
red.black$Q6_1<-factor(red.black$Q6_1, levels=c("Male", "Female"))
red.black<-read.table("red_black.txt", header=TRUE, sep="")
str(red.black)
red.black.2<-red.black
red.black.2$Color<-factor(red.black.2$Color, levels=c("Curitiba", "Veja"))
red.black.2$Q6_1<-factor(red.black.2$Q6_1, levels=c("Male", "Female"))
red.black.2$Q6_2<-factor(red.black.2$Q6_2, levels=c("Glasses", "No.Glasses"))
red.black.2$Q6_4<-factor(red.black.2$Q6_4, levels=c("Seoul", "Gyunggi", "Kangwon", "Other"))
red.black.2
red.black.2<-red.black
red.black.2$Color<-factor(red.black.2$Color, levels=c("Curitiba", "Veja"))
red.black.2
red.black.2$Q6_1<-factor(red.black.2$Q6_1, levels=c("1", "2"), labels=c("Male", "Female"))
red.black.2$Q6_2<-factor(red.black.2$Q6_2, levels=c("1", "2"), labels=c("Glasses", "No.Glasses"))
red.black.2$Q6_4<-factor(red.black.2$Q6_4, levels=1:4, labels=c("Seoul", "Gyunggi", "Kangwon", "Other"))
red.black.2
str(red.black.2)
save(file="red_black150408.rda", list=ls())
savehistory("red_black150408.Rhistory")
names(class.roll)
names(class.roll,2)
names(class.roll.2)
getwd()
setwd("~/")
getwd()
ls()
rm(list=ls())
load(".RData")
ls()
mydata
save(file="anscombe.rda", list=ls())
q("no")
q("no")
help(package="datasets")
getwd()
setwd("~/Dropbox/Works/Class/Case_studies_in_stat/R.WD/inequality/Wilkinson")
data.full<-read.xlsx("international-inequality.xls", 1)
library(xlsx)
data.full<-read.xlsx("international-inequality.xls", 1)
str(data.full)
rm(list=ls())
read.csv("international-inequality.csv")
data.full<-read.csv("international-inequality.csv")
str(data.full)
?read.csv
default.stringsAsFactors()
str(data.full)
which(is.na(data.full$Index.of.health...social_problems))
which(is.na(data.full$Index.of.health...social_problems))
str(data.full)
names(data.full)
which(names(data.full)=="Index.of.health...social_problems")
options(digits=2)
data.1<-data.full[-c(11, 18), c(1, 2, 13)]
data.1
data.1
attach(data.1)
plot(Index.of.health...social_problems~Income.inequality, data=data.1)
?par
plot(Index.of.health...social_problems~Income.inequality, data=data.1, pch=20)
text(Income.inequality, Index.of.health...social_problems, labels=Country)
plot(Index.of.health...social_problems~Income.inequality, data=data.1, pch=20)
text(Income.inequality, Index.of.health...social_problems, labels=Country, pos=4)
plot(Index.of.health...social_problems~Income.inequality, data=data.1, pch=20, xlim=c(3, 9), ylim=c(-1.5, 2.5))
text(Income.inequality, Index.of.health...social_problems, labels=Country, pos=4, cex=0.8)
which(Country %in% c("Austria", "Denmark", "Germany", "Netherlands"))
text.left<-which(Country %in% c("Austria", "Denmark", "Germany", "Netherlands"))
text.left
text.right<-(1:21)[-text.left]
text.right
plot(Index.of.health...social_problems~Income.inequality, data=data.1, pch=20, xlim=c(3, 9), ylim=c(-1.5, 2.5))
text(Income.inequality[text.right], Index.of.health...social_problems[text.right], labels=Country[text.right], pos=4, cex=0.8)
text(Income.inequality[text.left], Index.of.health...social_problems[text.left], labels=Country[text.left], pos=2, cex=0.8)
which(Country == "Germany")
text.up<-which(Country == "Germany")
text.up
which(text.left==text.up)
text.left<-text.left[!(text.left == text.up)]
text.left
plot(Index.of.health...social_problems~Income.inequality, data=data.1, pch=20, xlim=c(3, 9), ylim=c(-1.5, 2.5), ann=FALSE)
text(Income.inequality[text.right], Index.of.health...social_problems[text.right], labels=Country[text.right], pos=4, cex=0.8)
text(Income.inequality[text.left], Index.of.health...social_problems[text.left], labels=Country[text.left], pos=2, cex=0.8)
text(Income.inequality[text.up], Index.of.health...social_problems[text.up], labels=Country[text.up], pos=3, cex=0.8)
quartz(dpi=72, width=9, height=9)
plot(Index.of.health...social_problems~Income.inequality, data=data.1, pch=20, xlim=c(3, 9), ylim=c(-1.5, 2.5), ann=FALSE)
text(Income.inequality[text.left], Index.of.health...social_problems[text.left], labels=Country[text.left], pos=2, cex=0.8)
text(Income.inequality[text.up], Index.of.health...social_problems[text.up], labels=Country[text.up], pos=3, cex=0.8)
quartz(dpi=72, width=9, height=9)
plot(Index.of.health...social_problems~Income.inequality, data=data.1, pch=20, xlim=c(3, 9), ylim=c(-1.5, 2.5), ann=FALSE)
text(Income.inequality[text.left], Index.of.health...social_problems[text.left], labels=Country[text.left], pos=2, cex=0.8)
text(Income.inequality[text.up], Index.of.health...social_problems[text.up], labels=Country[text.up], pos=3, cex=0.8)
text(Income.inequality[text.right], Index.of.health...social_problems[text.right], labels=Country[text.right], pos=4, cex=0.8)
title(main="Income Inequality vs Index of Health and Social Problems", xlab="Income Inequality", ylab="Index of Health and Social Problems")
mtext("worse", side=2, at=2.8, las=1)
mtext("better", side=2, at=-1.8, las=1)
text(x=5, y=1.5, labels=paste("r =", round(cor(data.1[,2], data.1[,3]), digits=2)))
setwd("~/Dropbox/Works/Class/Case_studies_in_stat/R.WD/inequality/Piketty")
detach()
ls()
rm(list=ls())
load("piketty_gini.rda")
ls()
ls()
piketty.co
piketty.labor
cbind(x = piketty.labor$x, apply(piketty.labor[, 2:5], 2, cumsum))
cbind(x = piketty.labor$x, apply(piketty.labor[, 2:5], 2, cumsum))
piketty.labor.cum<-apply(piketty.labor[, 2:5], 2, cumsum)
y<-piketty.labor.cum[, 1]
plot(x = x, y = y, type="l", ann=FALSE, xaxt="n", yaxt="n")
x<-piketty.total$x
plot(x = x, y = y, type="l", ann=FALSE, xaxt="n", yaxt="n")
axis(side = 1, at = x, labels = paste(x*100))
axis(side = 2, at = y, labels = paste(y*100))
lines(x = x, y = x)
plot(x = x, y = y, type="l", ann=FALSE, xaxt="n", yaxt="n")
axis(side = 1, at = x, labels = paste(x*100))
axis(side = 2, at = y, labels = paste(y*100))
lines(x = x, y = x)
abline(v = x, h = c(0, 1), lty=2)
polygon(x = c(x, rev(x)), y = c(x, rev(y)), density = 15, angle = 135)
lines(x = x, y = piketty.labor.cum[ , 2], col="blue")
lines(x = x, y = piketty.labor.cum[ , 3], col="red")
lines(x = x, y = piketty.labor.cum[ , 4], col="grey")
title(main = "노동 소득의 로렌츠 곡선", xlab = "소득순 사람들의 누적(%)", ylab = "소득의 누적(%)")
legend(x = 0.05, y = 0.95, legend=c("낮음", "중간", "높음", "매우 높음"), lty = 1, col = c("black", "blue", "red", "cyan"), title="소득 불평등")
quartz(dpi=72, width7, height=7)
quartz(dpi=72, width=7, height=7)
plot(x = x, y = y, type="l", ann=FALSE, xaxt="n", yaxt="n")
axis(side = 1, at = x, labels = paste(x*100))
axis(side = 2, at = y, labels = paste(y*100))
lines(x = x, y = x)
abline(v = x, h = c(0, 1), lty=2)
polygon(x = c(x, rev(x)), y = c(x, rev(y)), density = 15, angle = 135)
lines(x = x, y = piketty.labor.cum[ , 2], col="blue")
lines(x = x, y = piketty.labor.cum[ , 3], col="red")
lines(x = x, y = piketty.labor.cum[ , 4], col="cyan")
title(main = "노동 소득의 로렌츠 곡선", xlab = "소득순 사람들의 누적(%)", ylab = "소득의 누적(%)")
legend(x = 0.05, y = 0.95, legend=c("낮음", "중간", "높음", "매우 높음"), lty = 1, col = c("black", "blue", "red", "cyan"), title="소득 불평등")
lorenz
lorenz
fix(lorenz)
lorenz(x = x, y=cumsum(piketty.labor$Low))
plot(x = x, y = y, type="l", ann=FALSE, xaxt="n", yaxt="n")
lines(x = x, y = x)
polygon(x = c(x, 0), y = c(y, 0), density = 15, angle = 135)
fix(lorenz)
lorenz(x = x, y=cumsum(piketty.labor$Low))
ls()
y
rm("y")
rm(list=ls(patt="cum"))
save(file="piketty_gini.rda", list=ls())
lorenz(x = x, y = cumsum(piketty.labor$Low))
text(x=c(0.25, 0.7, 0.95, 0.995), y=c(0.1, 0.2, 0.3, 0.4), labels=A:D)
text(x=c(0.25, 0.7, 0.95, 0.995), y=c(0.1, 0.2, 0.3, 0.4), labels="A":"D")
text(x=c(0.25, 0.7, 0.95, 0.995), y=c(0.1, 0.2, 0.3, 0.4), labels=c("A", "B", "C", "D"))
text(x=c(0.25, 0.7, 0.95, 0.995), y=c(0.1, 0.3, 0.5, 0.7), labels=c("A", "B", "C", "D"))
lorenz(x = x, y = cumsum(piketty.labor$Low))
text(x=c(0.25, 0.7, 0.95, 0.995), y=c(0.1, 0.3, 0.5, 0.6), labels=c("A", "B", "C", "D"))
lorenz(x = x, y = cumsum(piketty.labor$Low))
text(x=c(0.3, 0.7, 0.95, 0.995), y=c(0.1, 0.3, 0.5, 0.6), labels=c("A", "B", "C", "D"))
gini
fix(gini)
ls()
save(file="piketty_gini.rda", list=ls())
character(1:4)
fix(gini)
save(file="piketty_gini.rda", list=ls())
rm(list=ls())
setwd("~/Dropbox/Works/Class/Case_studies_in_stat/R.WD/inequality/Lorenz")
load("~/Dropbox/Works/Class/Case_studies_in_stat/R.WD/inequality/Lorenz/Gini_OECD.rda")
ls()
Gini.b.a
Gini.b.a$Country[order(Gini.b.a$Improvement)]
Gini.b.a$Country[order(Gini.b.a$Improvement, na.last=FALSE)]
Gini.b.a$Country[order(Gini.b.a$Improvement, na.last=FALSE, decreasing=TRUE)]
Gini.b.a$Country[order(Gini.b.a$Improvement, decreasing=TRUE)]
?barplot
barplot(as.matrix(t(Gini.b.a[, 2:3])), beside=TRUE, names.arg=Gini.b.a$Country)
quartz(dpi=72, width=16, height=4)
barplot(as.matrix(t(Gini.b.a[, 2:3])), beside=TRUE, names.arg=Gini.b.a$Country)
o.improvement<-order(Gini.b.a$Improvement, decreasing=TRUE)
Gini.b.a[o.improvement]
Gini.b.a$Country[o.improvement]
barplot(as.matrix(t(Gini.b.a[o.improvement, 2:3])), beside=TRUE, names.arg=Gini.b.a$Country)
barplot(as.matrix(t(Gini.b.a[o.improvement, 2:3])), beside=TRUE, names.arg=Gini.b.a$Country[o.improvement])
barplot(as.matrix(t(Gini.b.a[, 3:2])), beside=TRUE, horiz=TRUE, names.arg=Gini.b.a$Country, las=2, cex.names=0.5)
barplot(as.matrix(t(Gini.b.a[o.improvement, 2:3])), beside=TRUE, names.arg=Gini.b.a$Country[])
quartz(dpi=72, width=4, height=16)
barplot(as.matrix(t(Gini.b.a[o.improvement, 2:3])), beside=TRUE, names.arg=Gini.b.a$Country[])
barplot(as.matrix(t(Gini.b.a[, 3:2])), beside=TRUE, horiz=TRUE, names.arg=Gini.b.a$Country, las=2, cex.names=0.5)
barplot(as.matrix(t(Gini.b.a[o.improvement, 2:3])), beside=TRUE, horiz=TRUE, names.arg=Gini.b.a$Country[o.improvement], las=2, cex.names=0.5)
?order
barplot(as.matrix(t(Gini.b.a[order(Gini.b.a$Improvement, na.last=FALSE), 3:2])), beside=TRUE, horiz=TRUE, names.arg=Gini.b.a$Country[order(Gini.b.a$Improvement, na.last=FALSE)], las=2, cex.names=0.5)
barplot(as.matrix(t(Gini.b.a[order(Gini.b.a$Improvement, na.last=FALSE), 2:3])), beside=TRUE, horiz=TRUE, names.arg=Gini.b.a$Country[order(Gini.b.a$Improvement, na.last=FALSE)], las=2, cex.names=0.5)
barplot(as.matrix(t(Gini.b.a[order(Gini.b.a$Improvement, na.last=FALSE), 2:3])), beside=TRUE, horiz=TRUE, names.arg=Gini.b.a$Country[order(Gini.b.a$Improvement, na.last=FALSE)], las=2, cex.names=0.5)
barplot(as.matrix(t(Gini.b.a[order(Gini.b.a$Improvement, na.last=FALSE), 2:3])), beside=TRUE, horiz=TRUE, names.arg=Gini.b.a$Country[order(Gini.b.a$Improvement, na.last=FALSE)], las=2, cex.names=0.5)
save(file="Gini_OECD0504.rda", list=ls())
savehistory("Gini_OECD0504.Rhistory")
